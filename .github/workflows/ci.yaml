name: CI

on: push

env:
  GO_VERSION: 1.22.3

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Run Staticcheck
      uses: dominikh/staticcheck-action@v1.3.1
      with:
        version: 2023.1.7
        install-go: false

    - name: Test
      run: |
        make test
        python3 -m unittest

  build:
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        goos:
        - windows
        - linux
        - darwin
        goarch:
        - amd64
        - arm64
        include:
        - goos: linux
          goarch: arm
          goarm: 6
        - goos: linux
          goarch: arm
          goarm: 7
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build
      run: make dist

    - id: vars
      run: echo "distpath=$(make distpath)" >> $GITHUB_OUTPUT

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.vars.outputs.distpath }}
        path: ${{ steps.vars.outputs.distpath }}

    - run: sha256sum ${{ steps.vars.outputs.distpath }} > ${{ steps.vars.outputs.distpath }}.sha256

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.vars.outputs.distpath }}.sha256
        path: ${{ steps.vars.outputs.distpath }}.sha256

  containerise:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        path: artifacts

    # Ignore Windows and checksums.
    - run: |
        mkdir dist
        mv artifacts/*/*.linux-*.tar.gz dist/

    # We are not fussy about the Python version.
    - run: python3 bin/artifact_docker_reorg.py docker/ dist/

    - uses: docker/setup-buildx-action@v3

    - uses: docker/login-action@v3
      with:
        username: gebn
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - id: vars
      run: echo "tag=$(make version)" >> $GITHUB_OUTPUT

    - uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64/v8,linux/arm/v6,linux/arm/v7
        tags: gebn/tflcycles_exporter:${{ steps.vars.outputs.tag }}

  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
    - uses: actions/download-artifact@v4
      with:
        path: artifacts

    - uses: softprops/action-gh-release@v1
      with:
        draft: true
        prerelease: ${{ contains(github.ref, '-') }}
        files: |
          artifacts/*/*
